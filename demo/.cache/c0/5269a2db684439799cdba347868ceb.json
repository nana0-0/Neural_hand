{"id":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","dependencies":[{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\package.json","includedInParent":true,"mtime":1631872669254},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\.babelrc","includedInParent":true,"mtime":1631157722000},{"name":"@tensorflow/tfjs-core","loc":{"line":57,"column":26},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\multi_person\\decode_instance_masks.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"},{"name":"./decode_multiple_masks_cpu","loc":{"line":58,"column":42},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\multi_person\\decode_instance_masks.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\multi_person\\decode_multiple_masks_cpu.js"},{"name":"./decode_multiple_masks_webgl","loc":{"line":59,"column":44},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\multi_person\\decode_instance_masks.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\multi_person\\decode_multiple_masks_webgl.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.decodePersonInstancePartMasks = exports.decodePersonInstanceMasks = exports.toPersonKPartSegmentation = exports.toPersonKSegmentation = void 0;\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\r\nvar decode_multiple_masks_cpu_1 = require(\"./decode_multiple_masks_cpu\");\r\nvar decode_multiple_masks_webgl_1 = require(\"./decode_multiple_masks_webgl\");\r\nfunction toPersonKSegmentation(segmentation, k) {\r\n    return tf.tidy(function () { return tf.cast(tf.equal(segmentation, tf.scalar(k)), 'int32'); });\r\n}\r\nexports.toPersonKSegmentation = toPersonKSegmentation;\r\nfunction toPersonKPartSegmentation(segmentation, bodyParts, k) {\r\n    return tf.tidy(function () { return tf.sub(tf.mul(tf.cast(tf.equal(segmentation, tf.scalar(k)), 'int32'), tf.add(bodyParts, 1)), 1); });\r\n}\r\nexports.toPersonKPartSegmentation = toPersonKPartSegmentation;\r\nfunction isWebGlBackend() {\r\n    return tfjs_core_1.getBackend() === 'webgl';\r\n}\r\nfunction decodePersonInstanceMasks(segmentation, longOffsets, poses, height, width, stride, _a, padding, minPoseScore, refineSteps, minKeypointScore, maxNumPeople) {\r\n    var inHeight = _a[0], inWidth = _a[1];\r\n    if (minPoseScore === void 0) { minPoseScore = 0.2; }\r\n    if (refineSteps === void 0) { refineSteps = 8; }\r\n    if (minKeypointScore === void 0) { minKeypointScore = 0.3; }\r\n    if (maxNumPeople === void 0) { maxNumPeople = 10; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var posesAboveScore, personSegmentationsData, personSegmentations, segmentationsData, longOffsetsData;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    posesAboveScore = poses.filter(function (pose) { return pose.score >= minPoseScore; });\r\n                    if (!isWebGlBackend()) return [3 /*break*/, 2];\r\n                    personSegmentations = tf.tidy(function () {\r\n                        var masksTensorInfo = decode_multiple_masks_webgl_1.decodeMultipleMasksWebGl(segmentation, longOffsets, posesAboveScore, height, width, stride, [inHeight, inWidth], padding, refineSteps, minKeypointScore, maxNumPeople);\r\n                        var masksTensor = tf.engine().makeTensorFromDataId(masksTensorInfo.dataId, masksTensorInfo.shape, masksTensorInfo.dtype);\r\n                        return posesAboveScore.map(function (_, k) { return toPersonKSegmentation(masksTensor, k); });\r\n                    });\r\n                    return [4 /*yield*/, Promise.all(personSegmentations.map(function (mask) { return mask.data(); }))];\r\n                case 1:\r\n                    personSegmentationsData =\r\n                        (_b.sent());\r\n                    personSegmentations.forEach(function (x) { return x.dispose(); });\r\n                    return [3 /*break*/, 5];\r\n                case 2: return [4 /*yield*/, segmentation.data()];\r\n                case 3:\r\n                    segmentationsData = _b.sent();\r\n                    return [4 /*yield*/, longOffsets.data()];\r\n                case 4:\r\n                    longOffsetsData = _b.sent();\r\n                    personSegmentationsData = decode_multiple_masks_cpu_1.decodeMultipleMasksCPU(segmentationsData, longOffsetsData, posesAboveScore, height, width, stride, [inHeight, inWidth], padding, refineSteps);\r\n                    _b.label = 5;\r\n                case 5: return [2 /*return*/, personSegmentationsData.map(function (data, i) { return ({ data: data, pose: posesAboveScore[i], width: width, height: height }); })];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.decodePersonInstanceMasks = decodePersonInstanceMasks;\r\nfunction decodePersonInstancePartMasks(segmentation, longOffsets, partSegmentation, poses, height, width, stride, _a, padding, minPoseScore, refineSteps, minKeypointScore, maxNumPeople) {\r\n    var inHeight = _a[0], inWidth = _a[1];\r\n    if (minPoseScore === void 0) { minPoseScore = 0.2; }\r\n    if (refineSteps === void 0) { refineSteps = 8; }\r\n    if (minKeypointScore === void 0) { minKeypointScore = 0.3; }\r\n    if (maxNumPeople === void 0) { maxNumPeople = 10; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var posesAboveScore, partSegmentationsByPersonData, partSegmentations, segmentationsData, longOffsetsData, partSegmentaionData;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    posesAboveScore = poses.filter(function (pose) { return pose.score >= minPoseScore; });\r\n                    if (!isWebGlBackend()) return [3 /*break*/, 2];\r\n                    partSegmentations = tf.tidy(function () {\r\n                        var masksTensorInfo = decode_multiple_masks_webgl_1.decodeMultipleMasksWebGl(segmentation, longOffsets, posesAboveScore, height, width, stride, [inHeight, inWidth], padding, refineSteps, minKeypointScore, maxNumPeople);\r\n                        var masksTensor = tf.engine().makeTensorFromDataId(masksTensorInfo.dataId, masksTensorInfo.shape, masksTensorInfo.dtype);\r\n                        return posesAboveScore.map(function (_, k) {\r\n                            return toPersonKPartSegmentation(masksTensor, partSegmentation, k);\r\n                        });\r\n                    });\r\n                    return [4 /*yield*/, Promise.all(partSegmentations.map(function (x) { return x.data(); }))];\r\n                case 1:\r\n                    partSegmentationsByPersonData =\r\n                        (_b.sent());\r\n                    partSegmentations.forEach(function (x) { return x.dispose(); });\r\n                    return [3 /*break*/, 6];\r\n                case 2: return [4 /*yield*/, segmentation.data()];\r\n                case 3:\r\n                    segmentationsData = _b.sent();\r\n                    return [4 /*yield*/, longOffsets.data()];\r\n                case 4:\r\n                    longOffsetsData = _b.sent();\r\n                    return [4 /*yield*/, partSegmentation.data()];\r\n                case 5:\r\n                    partSegmentaionData = _b.sent();\r\n                    partSegmentationsByPersonData = decode_multiple_masks_cpu_1.decodeMultiplePartMasksCPU(segmentationsData, longOffsetsData, partSegmentaionData, posesAboveScore, height, width, stride, [inHeight, inWidth], padding, refineSteps);\r\n                    _b.label = 6;\r\n                case 6: return [2 /*return*/, partSegmentationsByPersonData.map(function (data, k) { return ({ pose: posesAboveScore[k], data: data, height: height, width: width }); })];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.decodePersonInstancePartMasks = decodePersonInstancePartMasks;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}}],"sources":{"node_modules/@tensorflow-models/body-pix/multi_person/decode_instance_masks.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nexports.decodePersonInstancePartMasks = exports.decodePersonInstanceMasks = exports.toPersonKPartSegmentation = exports.toPersonKSegmentation = void 0;\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\r\nvar decode_multiple_masks_cpu_1 = require(\"./decode_multiple_masks_cpu\");\r\nvar decode_multiple_masks_webgl_1 = require(\"./decode_multiple_masks_webgl\");\r\nfunction toPersonKSegmentation(segmentation, k) {\r\n    return tf.tidy(function () { return tf.cast(tf.equal(segmentation, tf.scalar(k)), 'int32'); });\r\n}\r\nexports.toPersonKSegmentation = toPersonKSegmentation;\r\nfunction toPersonKPartSegmentation(segmentation, bodyParts, k) {\r\n    return tf.tidy(function () { return tf.sub(tf.mul(tf.cast(tf.equal(segmentation, tf.scalar(k)), 'int32'), tf.add(bodyParts, 1)), 1); });\r\n}\r\nexports.toPersonKPartSegmentation = toPersonKPartSegmentation;\r\nfunction isWebGlBackend() {\r\n    return tfjs_core_1.getBackend() === 'webgl';\r\n}\r\nfunction decodePersonInstanceMasks(segmentation, longOffsets, poses, height, width, stride, _a, padding, minPoseScore, refineSteps, minKeypointScore, maxNumPeople) {\r\n    var inHeight = _a[0], inWidth = _a[1];\r\n    if (minPoseScore === void 0) { minPoseScore = 0.2; }\r\n    if (refineSteps === void 0) { refineSteps = 8; }\r\n    if (minKeypointScore === void 0) { minKeypointScore = 0.3; }\r\n    if (maxNumPeople === void 0) { maxNumPeople = 10; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var posesAboveScore, personSegmentationsData, personSegmentations, segmentationsData, longOffsetsData;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    posesAboveScore = poses.filter(function (pose) { return pose.score >= minPoseScore; });\r\n                    if (!isWebGlBackend()) return [3 /*break*/, 2];\r\n                    personSegmentations = tf.tidy(function () {\r\n                        var masksTensorInfo = decode_multiple_masks_webgl_1.decodeMultipleMasksWebGl(segmentation, longOffsets, posesAboveScore, height, width, stride, [inHeight, inWidth], padding, refineSteps, minKeypointScore, maxNumPeople);\r\n                        var masksTensor = tf.engine().makeTensorFromDataId(masksTensorInfo.dataId, masksTensorInfo.shape, masksTensorInfo.dtype);\r\n                        return posesAboveScore.map(function (_, k) { return toPersonKSegmentation(masksTensor, k); });\r\n                    });\r\n                    return [4 /*yield*/, Promise.all(personSegmentations.map(function (mask) { return mask.data(); }))];\r\n                case 1:\r\n                    personSegmentationsData =\r\n                        (_b.sent());\r\n                    personSegmentations.forEach(function (x) { return x.dispose(); });\r\n                    return [3 /*break*/, 5];\r\n                case 2: return [4 /*yield*/, segmentation.data()];\r\n                case 3:\r\n                    segmentationsData = _b.sent();\r\n                    return [4 /*yield*/, longOffsets.data()];\r\n                case 4:\r\n                    longOffsetsData = _b.sent();\r\n                    personSegmentationsData = decode_multiple_masks_cpu_1.decodeMultipleMasksCPU(segmentationsData, longOffsetsData, posesAboveScore, height, width, stride, [inHeight, inWidth], padding, refineSteps);\r\n                    _b.label = 5;\r\n                case 5: return [2 /*return*/, personSegmentationsData.map(function (data, i) { return ({ data: data, pose: posesAboveScore[i], width: width, height: height }); })];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.decodePersonInstanceMasks = decodePersonInstanceMasks;\r\nfunction decodePersonInstancePartMasks(segmentation, longOffsets, partSegmentation, poses, height, width, stride, _a, padding, minPoseScore, refineSteps, minKeypointScore, maxNumPeople) {\r\n    var inHeight = _a[0], inWidth = _a[1];\r\n    if (minPoseScore === void 0) { minPoseScore = 0.2; }\r\n    if (refineSteps === void 0) { refineSteps = 8; }\r\n    if (minKeypointScore === void 0) { minKeypointScore = 0.3; }\r\n    if (maxNumPeople === void 0) { maxNumPeople = 10; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var posesAboveScore, partSegmentationsByPersonData, partSegmentations, segmentationsData, longOffsetsData, partSegmentaionData;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    posesAboveScore = poses.filter(function (pose) { return pose.score >= minPoseScore; });\r\n                    if (!isWebGlBackend()) return [3 /*break*/, 2];\r\n                    partSegmentations = tf.tidy(function () {\r\n                        var masksTensorInfo = decode_multiple_masks_webgl_1.decodeMultipleMasksWebGl(segmentation, longOffsets, posesAboveScore, height, width, stride, [inHeight, inWidth], padding, refineSteps, minKeypointScore, maxNumPeople);\r\n                        var masksTensor = tf.engine().makeTensorFromDataId(masksTensorInfo.dataId, masksTensorInfo.shape, masksTensorInfo.dtype);\r\n                        return posesAboveScore.map(function (_, k) {\r\n                            return toPersonKPartSegmentation(masksTensor, partSegmentation, k);\r\n                        });\r\n                    });\r\n                    return [4 /*yield*/, Promise.all(partSegmentations.map(function (x) { return x.data(); }))];\r\n                case 1:\r\n                    partSegmentationsByPersonData =\r\n                        (_b.sent());\r\n                    partSegmentations.forEach(function (x) { return x.dispose(); });\r\n                    return [3 /*break*/, 6];\r\n                case 2: return [4 /*yield*/, segmentation.data()];\r\n                case 3:\r\n                    segmentationsData = _b.sent();\r\n                    return [4 /*yield*/, longOffsets.data()];\r\n                case 4:\r\n                    longOffsetsData = _b.sent();\r\n                    return [4 /*yield*/, partSegmentation.data()];\r\n                case 5:\r\n                    partSegmentaionData = _b.sent();\r\n                    partSegmentationsByPersonData = decode_multiple_masks_cpu_1.decodeMultiplePartMasksCPU(segmentationsData, longOffsetsData, partSegmentaionData, posesAboveScore, height, width, stride, [inHeight, inWidth], padding, refineSteps);\r\n                    _b.label = 6;\r\n                case 6: return [2 /*return*/, partSegmentationsByPersonData.map(function (data, k) { return ({ pose: posesAboveScore[k], data: data, height: height, width: width }); })];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.decodePersonInstancePartMasks = decodePersonInstancePartMasks;\r\n"},"lineCount":152}},"error":null,"hash":"b8e2928896129771c20f75579ec0b192","cacheData":{"env":{}}}