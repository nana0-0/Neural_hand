{"id":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","dependencies":[{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\package.json","includedInParent":true,"mtime":1631872669254},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\.babelrc","includedInParent":true,"mtime":1631157722000},{"name":"@tensorflow/tfjs-core","loc":{"line":20,"column":17},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\decode_part_map.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexports.__esModule = true;\r\nexports.decodeOnlyPartSegmentation = exports.decodePartSegmentation = exports.toMaskTensor = void 0;\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\n/**\r\n * Takes the sigmoid of the part heatmap output and generates a 2d one-hot\r\n * tensor with ones where the part's score has the maximum value.\r\n *\r\n * @param partHeatmapScores\r\n */\r\nfunction toFlattenedOneHotPartMap(partHeatmapScores) {\r\n    var numParts = partHeatmapScores.shape[2];\r\n    var partMapLocations = tf.argMax(partHeatmapScores, 2);\r\n    var partMapFlattened = tf.reshape(partMapLocations, [-1]);\r\n    return tf.oneHot(partMapFlattened, numParts);\r\n}\r\nfunction clipByMask2d(image, mask) {\r\n    return tf.mul(image, mask);\r\n}\r\n/**\r\n * Takes the sigmoid of the segmentation output, and generates a segmentation\r\n * mask with a 1 or 0 at each pixel where there is a person or not a person. The\r\n * segmentation threshold determines the threshold of a score for a pixel for it\r\n * to be considered part of a person.\r\n * @param segmentScores A 3d-tensor of the sigmoid of the segmentation output.\r\n * @param segmentationThreshold The minimum that segmentation values must have\r\n * to be considered part of the person.  Affects the generation of the\r\n * segmentation mask and the clipping of the colored part image.\r\n *\r\n * @returns A segmentation mask with a 1 or 0 at each pixel where there is a\r\n * person or not a person.\r\n */\r\nfunction toMaskTensor(segmentScores, threshold) {\r\n    return tf.tidy(function () {\r\n        return tf.cast(tf.greater(segmentScores, tf.scalar(threshold)), 'int32');\r\n    });\r\n}\r\nexports.toMaskTensor = toMaskTensor;\r\n/**\r\n * Takes the sigmoid of the person and part map output, and returns a 2d tensor\r\n * of an image with the corresponding value at each pixel corresponding to the\r\n * part with the highest value. These part ids are clipped by the segmentation\r\n * mask. Wherever the a pixel is clipped by the segmentation mask, its value\r\n * will set to -1, indicating that there is no part in that pixel.\r\n * @param segmentScores A 3d-tensor of the sigmoid of the segmentation output.\r\n * @param partHeatmapScores A 3d-tensor of the sigmoid of the part heatmap\r\n * output. The third dimension corresponds to the part.\r\n *\r\n * @returns A 2d tensor of an image with the corresponding value at each pixel\r\n * corresponding to the part with the highest value. These part ids are clipped\r\n * by the segmentation mask.  It will have values of -1 for pixels that are\r\n * outside of the body and do not have a corresponding part.\r\n */\r\nfunction decodePartSegmentation(segmentationMask, partHeatmapScores) {\r\n    var _a = partHeatmapScores.shape, partMapHeight = _a[0], partMapWidth = _a[1], numParts = _a[2];\r\n    return tf.tidy(function () {\r\n        var flattenedMap = toFlattenedOneHotPartMap(partHeatmapScores);\r\n        var partNumbers = tf.expandDims(tf.range(0, numParts, 1, 'int32'), 1);\r\n        var partMapFlattened = tf.cast(tf.matMul(flattenedMap, partNumbers), 'int32');\r\n        var partMap = tf.reshape(partMapFlattened, [partMapHeight, partMapWidth]);\r\n        var partMapShiftedUpForClipping = tf.add(partMap, tf.scalar(1, 'int32'));\r\n        return tf.sub(clipByMask2d(partMapShiftedUpForClipping, segmentationMask), tf.scalar(1, 'int32'));\r\n    });\r\n}\r\nexports.decodePartSegmentation = decodePartSegmentation;\r\nfunction decodeOnlyPartSegmentation(partHeatmapScores) {\r\n    var _a = partHeatmapScores.shape, partMapHeight = _a[0], partMapWidth = _a[1], numParts = _a[2];\r\n    return tf.tidy(function () {\r\n        var flattenedMap = toFlattenedOneHotPartMap(partHeatmapScores);\r\n        var partNumbers = tf.expandDims(tf.range(0, numParts, 1, 'int32'), 1);\r\n        var partMapFlattened = tf.cast(tf.matMul(flattenedMap, partNumbers), 'int32');\r\n        return tf.reshape(partMapFlattened, [partMapHeight, partMapWidth]);\r\n    });\r\n}\r\nexports.decodeOnlyPartSegmentation = decodeOnlyPartSegmentation;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/decode_part_map.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}}],"sources":{"node_modules/@tensorflow-models/body-pix/decode_part_map.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexports.__esModule = true;\r\nexports.decodeOnlyPartSegmentation = exports.decodePartSegmentation = exports.toMaskTensor = void 0;\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\n/**\r\n * Takes the sigmoid of the part heatmap output and generates a 2d one-hot\r\n * tensor with ones where the part's score has the maximum value.\r\n *\r\n * @param partHeatmapScores\r\n */\r\nfunction toFlattenedOneHotPartMap(partHeatmapScores) {\r\n    var numParts = partHeatmapScores.shape[2];\r\n    var partMapLocations = tf.argMax(partHeatmapScores, 2);\r\n    var partMapFlattened = tf.reshape(partMapLocations, [-1]);\r\n    return tf.oneHot(partMapFlattened, numParts);\r\n}\r\nfunction clipByMask2d(image, mask) {\r\n    return tf.mul(image, mask);\r\n}\r\n/**\r\n * Takes the sigmoid of the segmentation output, and generates a segmentation\r\n * mask with a 1 or 0 at each pixel where there is a person or not a person. The\r\n * segmentation threshold determines the threshold of a score for a pixel for it\r\n * to be considered part of a person.\r\n * @param segmentScores A 3d-tensor of the sigmoid of the segmentation output.\r\n * @param segmentationThreshold The minimum that segmentation values must have\r\n * to be considered part of the person.  Affects the generation of the\r\n * segmentation mask and the clipping of the colored part image.\r\n *\r\n * @returns A segmentation mask with a 1 or 0 at each pixel where there is a\r\n * person or not a person.\r\n */\r\nfunction toMaskTensor(segmentScores, threshold) {\r\n    return tf.tidy(function () {\r\n        return tf.cast(tf.greater(segmentScores, tf.scalar(threshold)), 'int32');\r\n    });\r\n}\r\nexports.toMaskTensor = toMaskTensor;\r\n/**\r\n * Takes the sigmoid of the person and part map output, and returns a 2d tensor\r\n * of an image with the corresponding value at each pixel corresponding to the\r\n * part with the highest value. These part ids are clipped by the segmentation\r\n * mask. Wherever the a pixel is clipped by the segmentation mask, its value\r\n * will set to -1, indicating that there is no part in that pixel.\r\n * @param segmentScores A 3d-tensor of the sigmoid of the segmentation output.\r\n * @param partHeatmapScores A 3d-tensor of the sigmoid of the part heatmap\r\n * output. The third dimension corresponds to the part.\r\n *\r\n * @returns A 2d tensor of an image with the corresponding value at each pixel\r\n * corresponding to the part with the highest value. These part ids are clipped\r\n * by the segmentation mask.  It will have values of -1 for pixels that are\r\n * outside of the body and do not have a corresponding part.\r\n */\r\nfunction decodePartSegmentation(segmentationMask, partHeatmapScores) {\r\n    var _a = partHeatmapScores.shape, partMapHeight = _a[0], partMapWidth = _a[1], numParts = _a[2];\r\n    return tf.tidy(function () {\r\n        var flattenedMap = toFlattenedOneHotPartMap(partHeatmapScores);\r\n        var partNumbers = tf.expandDims(tf.range(0, numParts, 1, 'int32'), 1);\r\n        var partMapFlattened = tf.cast(tf.matMul(flattenedMap, partNumbers), 'int32');\r\n        var partMap = tf.reshape(partMapFlattened, [partMapHeight, partMapWidth]);\r\n        var partMapShiftedUpForClipping = tf.add(partMap, tf.scalar(1, 'int32'));\r\n        return tf.sub(clipByMask2d(partMapShiftedUpForClipping, segmentationMask), tf.scalar(1, 'int32'));\r\n    });\r\n}\r\nexports.decodePartSegmentation = decodePartSegmentation;\r\nfunction decodeOnlyPartSegmentation(partHeatmapScores) {\r\n    var _a = partHeatmapScores.shape, partMapHeight = _a[0], partMapWidth = _a[1], numParts = _a[2];\r\n    return tf.tidy(function () {\r\n        var flattenedMap = toFlattenedOneHotPartMap(partHeatmapScores);\r\n        var partNumbers = tf.expandDims(tf.range(0, numParts, 1, 'int32'), 1);\r\n        var partMapFlattened = tf.cast(tf.matMul(flattenedMap, partNumbers), 'int32');\r\n        return tf.reshape(partMapFlattened, [partMapHeight, partMapWidth]);\r\n    });\r\n}\r\nexports.decodeOnlyPartSegmentation = decodeOnlyPartSegmentation;\r\n"},"lineCount":92}},"error":null,"hash":"1c5c47a6c39669dd13ce5a6ecf467820","cacheData":{"env":{}}}