{"id":"najp","dependencies":[{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\conv_packed_gpu_depthwise.js.map","includedInParent":true,"mtime":1631428631614},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\package.json","includedInParent":true,"mtime":1631157722000},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\.babelrc","includedInParent":true,"mtime":1631157722000},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1631428631614},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":21},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\conv_packed_gpu_depthwise.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.DepthwiseConvPacked2DProgram=void 0;var e=require(\"@tensorflow/tfjs-core\");class n{constructor(n,x=!1,t=null,C=!1,l=!1){this.variableNames=[\"x\",\"W\"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.outShape;const s=n.outChannels/n.inChannels,a=n.inHeight,f=n.inWidth,i=n.padInfo.top,$=n.padInfo.left,c=n.strideHeight,r=n.strideWidth,d=n.dilationHeight,o=n.dilationWidth,v=n.filterHeight,T=n.filterWidth,u=T;let h=\"\\n      int xR; int xC; int xCOffset;\\n      vec4 wTexel; vec4 previous; vec4 final;\";for(let e=0;e<T;e++)h+=`\\n          vec4 xTexelC${2*e};\\n          int xTexelC${2*e}Ready;\\n          vec4 xC${e};`;for(let w=0;w<v;w++){for(let e=0;e<T;e++)h+=`\\n          xTexelC${2*e} = vec4(0.0);\\n          xTexelC${2*e}Ready = 0;\\n          xC${e} = vec4(0.0);`;h+=`\\n        xR = xRCorner + ${w*d};\\n        if (xR >=0 && xR < ${a}) {\\n      `;for(let n=0;n<(u+1)/2;n++){const x=2*n,t=x*o;if(h+=`\\n          xC = xCCorner + ${t};\\n          `,1===r){if(x<T&&($%2==1?(h+=`\\n                xCOffset = xC + 1;\\n                if (xCOffset >= 0 && xCOffset < ${f} && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\\n\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xCOffset + 1 >= ${f}) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n              `,h+=1===o&&t>0?`\\n                xC${x} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\\n                `:`\\n                  xCOffset = xC + 1 - 2;\\n\\n                  if (xCOffset >= 0 && xCOffset < ${f}) {\\n                    previous = getX(batch, xR, xCOffset, d1);\\n\\n                    // Need to manually clear unused channels in case\\n                    // we're reading from recycled texture.\\n                    if (xCOffset + 1 >= ${f}) {\\n                      previous.zw = vec2(0.0);\\n                    }\\n\\n                    xC${x} = vec4(previous.zw, xTexelC${t}.xy);\\n                  } else {\\n                    xC${x} = vec4(0.0, 0.0, xTexelC${t}.xy);\\n                  }\\n                  `):h+=`\\n                if (xC >= 0 && xC < ${f} && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xC, d1);\\n                  if (xC + 1 >= ${f}) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                xC${x} = xTexelC${t};\\n                `,t+1<T)){const n=$%2==0?e.util.nearestLargerEven(o):o;o%2==0&&$%2==1||o%2!=0&&$%2!=1?(h+=`\\n                  xCOffset = xC + ${$%2} + ${n};\\n\\n                  if (xCOffset >= 0 && xCOffset < ${f} && xTexelC${t+2}Ready == 0) {\\n                    xTexelC${t+2} = getX(batch, xR, xCOffset, d1);\\n\\n                    // Need to manually clear unused channels in case\\n                    // we're reading from recycled texture.\\n                    if (xCOffset + 1 >= ${f}) {\\n                      xTexelC${t+2}.zw = vec2(0.0);\\n                    }\\n                    xTexelC${t+2}Ready = 1;\\n                  }\\n                  `,o>1&&(h+=`\\n                    xCOffset -= 2;\\n                    if (xCOffset >= 0 && xCOffset < ${f} && xTexelC${t}Ready == 0) {\\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\\n                      xTexelC${t}Ready = 1;\\n                    }\\n                    `),h+=`\\n                  xC${x+1} = vec4(xTexelC${t}.zw, xTexelC${t+2}.xy);\\n                  `):h+=1===n?`\\n                    xC${x+1} = xTexelC${t};\\n                    `:`\\n                    xCOffset = xC + ${n};\\n\\n                    if (xCOffset >= 0 && xCOffset < ${f} && xTexelC${t+2}Ready == 0) {\\n                      xTexelC${t+2} = getX(batch, xR, xCOffset, d1);\\n                      if (xCOffset + 1 >= ${f}) {\\n                        xTexelC${t+2}.zw = vec2(0.0);\\n                      }\\n                      xTexelC${t+2}Ready = 1;\\n                    }\\n\\n                    xC${x+1} = xTexelC${t+2};\\n                    `}}else t<T&&($%2==1?(h+=`\\n                xCOffset = xC + 1 - ${r};\\n                if(xCOffset >= 0 && xCOffset < ${f} && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xCOffset + 1 >= ${f}) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                if(xC + 1 >= 0 && xC + 1 < ${f} && xTexelC${t+2}Ready == 0) {\\n                  xTexelC${t+2} = getX(batch, xR, xC + 1, d1);\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xC + 2 >= ${f}) {\\n                    xTexelC${t+2}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t+2}Ready = 1;\\n                }\\n\\n                xC${x} = vec4(xTexelC${t}.zw, xTexelC${t+2}.zw);\\n              `,t+1<T&&(h+=`\\n                  final = vec4(0.0);\\n                  xCOffset = xC + 1 + ${r};\\n                  if(xCOffset >= 0 && xCOffset < ${f}) {\\n                    final = getX(batch, xR, xCOffset, d1);\\n                  }\\n                  xC${x+1} = vec4(xTexelC${t+2}.xy, final.xy);\\n                `)):(h+=`\\n                if(xC >= 0 && xC < ${f} && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xC, d1);\\n                  if (xC + 1 >= ${f}) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                xCOffset = xC + ${r};\\n                if(xCOffset >= 0 && xCOffset < ${f} && xTexelC${t+2}Ready == 0) {\\n                  xTexelC${t+2} = getX(batch, xR, xCOffset, d1);\\n                  if (xCOffset + 1 >= ${f}) {\\n                    xTexelC${t+2}.zw = vec2(0.);\\n                  }\\n                  xTexelC${t+2}Ready = 1;\\n                }\\n\\n                xC${x} = vec4(\\n                  xTexelC${t}.xy, xTexelC${t+2}.xy);\\n              `,t+1<T&&(h+=`\\n                  xC${x+1} = vec4(xTexelC${t}.zw, xTexelC${t+2}.zw);\\n                `)));x<T&&(h+=`\\n            wTexel = getW(${w}, ${t}, d1, q);\\n            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);\\n          `,t+1<T&&(h+=`\\n              wTexel = getW(${w}, ${t+1}, d1, q);\\n              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);\\n            `))}h+=\"\\n        }\\n      \"}let O=\"\",y=\"\";t&&(O=C?`vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          ${t}\\n        }`:l?`vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          ${t}\\n        }`:`vec4 activation(vec4 x) {\\n          ${t}\\n        }`,y=\"result = activation(result);\");const R=x?\"result += getBiasAtOutCoords();\":\"\";x&&this.variableNames.push(\"bias\"),C&&this.variableNames.push(\"preluActivationWeights\"),l&&this.variableNames.push(\"leakyreluAlpha\"),this.userCode=`\\n      ${O}\\n\\n      const ivec2 strides = ivec2(${c}, ${r});\\n      const ivec2 pads = ivec2(${i}, ${$});\\n\\n      void main() {\\n\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / ${s};\\n        int q = d2 - d1 * ${s};\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\\n        vec4 dotProd = vec4(0.000000000000001);\\n\\n        ${h}\\n\\n        vec4 result = dotProd - vec4(0.000000000000001);\\n        ${R}\\n        ${y}\\n        setOutput(result);\\n      }\\n    `}}exports.DepthwiseConvPacked2DProgram=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":0}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":13}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":20}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":35}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":43}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":56}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":57}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":64}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":68}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":76}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":110}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":112}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":116}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":118}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":126}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":1,"column":151}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":1,"column":157}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":1,"column":159}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":1,"column":171}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":30,"column":41},"generated":{"line":1,"column":173}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":30,"column":51},"generated":{"line":1,"column":176}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":178}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":27},"generated":{"line":1,"column":180}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":33},"generated":{"line":1,"column":185}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":54},"generated":{"line":1,"column":188}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":1,"column":190}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":32,"column":26},"generated":{"line":1,"column":193}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":196}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":201}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":1,"column":215}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":1,"column":216}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":24},"generated":{"line":1,"column":220}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":225}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":230}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":24,"column":17},"generated":{"line":1,"column":244}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":246}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":251}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":25,"column":17},"generated":{"line":1,"column":265}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":1,"column":267}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":1,"column":272}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":1,"column":284}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":32},"generated":{"line":1,"column":286}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":1,"column":295}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":1,"column":301}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":34,"column":23},"generated":{"line":1,"column":303}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":34,"column":32},"generated":{"line":1,"column":305}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":34,"column":46},"generated":{"line":1,"column":317}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":34,"column":55},"generated":{"line":1,"column":319}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":1,"column":330}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":35,"column":21},"generated":{"line":1,"column":332}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":35,"column":30},"generated":{"line":1,"column":334}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":1,"column":343}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":36,"column":21},"generated":{"line":1,"column":345}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":36,"column":30},"generated":{"line":1,"column":347}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":1,"column":355}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":37,"column":19},"generated":{"line":1,"column":357}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":37,"column":28},"generated":{"line":1,"column":359}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":37,"column":36},"generated":{"line":1,"column":367}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":1,"column":371}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":38,"column":20},"generated":{"line":1,"column":373}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":38,"column":29},"generated":{"line":1,"column":375}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":38,"column":37},"generated":{"line":1,"column":383}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":1,"column":388}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":39,"column":25},"generated":{"line":1,"column":390}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":39,"column":34},"generated":{"line":1,"column":392}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":1,"column":405}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":40,"column":24},"generated":{"line":1,"column":407}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":40,"column":33},"generated":{"line":1,"column":409}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":1,"column":421}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":27},"generated":{"line":1,"column":423}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":36},"generated":{"line":1,"column":425}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":1,"column":440}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":26},"generated":{"line":1,"column":442}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":35},"generated":{"line":1,"column":444}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":1,"column":458}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":43,"column":25},"generated":{"line":1,"column":460}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":462}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":44,"column":10},"generated":{"line":1,"column":475}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":44,"column":24},"generated":{"line":1,"column":477}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":44,"column":33},"generated":{"line":1,"column":479}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":45,"column":10},"generated":{"line":1,"column":491}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":45,"column":25},"generated":{"line":1,"column":493}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":1,"column":495}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":1,"column":499}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":47,"column":19},"generated":{"line":1,"column":501}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":1,"column":588}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":1,"column":592}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":51,"column":13},"generated":{"line":1,"column":596}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":51,"column":17},"generated":{"line":1,"column":598}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":51,"column":20},"generated":{"line":1,"column":600}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":51,"column":24},"generated":{"line":1,"column":602}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":51,"column":37},"generated":{"line":1,"column":604}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":1,"column":608}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":53,"column":28},"generated":{"line":1,"column":638}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":53,"column":24},"generated":{"line":1,"column":640}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":27},"generated":{"line":1,"column":668}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":23},"generated":{"line":1,"column":670}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":55,"column":19},"generated":{"line":1,"column":699}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":1,"column":704}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":1,"column":708}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":66,"column":13},"generated":{"line":1,"column":712}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":1,"column":714}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":66,"column":20},"generated":{"line":1,"column":716}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":66,"column":24},"generated":{"line":1,"column":718}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":1,"column":720}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":66,"column":43},"generated":{"line":1,"column":724}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":67,"column":11},"generated":{"line":1,"column":725}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":67,"column":11},"generated":{"line":1,"column":729}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":67,"column":15},"generated":{"line":1,"column":733}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":67,"column":19},"generated":{"line":1,"column":735}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":67,"column":22},"generated":{"line":1,"column":737}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":67,"column":26},"generated":{"line":1,"column":739}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":67,"column":39},"generated":{"line":1,"column":741}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":1,"column":745}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":69,"column":23},"generated":{"line":1,"column":770}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":69,"column":19},"generated":{"line":1,"column":772}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":70,"column":23},"generated":{"line":1,"column":808}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":70,"column":19},"generated":{"line":1,"column":810}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":1,"column":838}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":1,"column":855}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":1,"column":887}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":74,"column":30},"generated":{"line":1,"column":889}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":75,"column":29},"generated":{"line":1,"column":923}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":11},"generated":{"line":1,"column":938}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":11},"generated":{"line":1,"column":942}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":15},"generated":{"line":1,"column":946}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":24},"generated":{"line":1,"column":948}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":27},"generated":{"line":1,"column":950}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":37},"generated":{"line":1,"column":953}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":52},"generated":{"line":1,"column":955}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":57},"generated":{"line":1,"column":958}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":60},"generated":{"line":1,"column":960}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":70},"generated":{"line":1,"column":964}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":79,"column":14},"generated":{"line":1,"column":965}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":79,"column":14},"generated":{"line":1,"column":971}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":79,"column":34},"generated":{"line":1,"column":973}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":79,"column":25},"generated":{"line":1,"column":975}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":80,"column":14},"generated":{"line":1,"column":977}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":80,"column":18},"generated":{"line":1,"column":979}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":80,"column":29},"generated":{"line":1,"column":981}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":86,"column":12},"generated":{"line":1,"column":983}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":82,"column":8},"generated":{"line":1,"column":986}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":83,"column":28},"generated":{"line":1,"column":1020}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":86,"column":28},"generated":{"line":1,"column":1037}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":86,"column":12},"generated":{"line":1,"column":1041}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":87,"column":14},"generated":{"line":1,"column":1044}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":87,"column":14},"generated":{"line":1,"column":1047}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":87,"column":25},"generated":{"line":1,"column":1049}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":89,"column":16},"generated":{"line":1,"column":1053}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":89,"column":26},"generated":{"line":1,"column":1055}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":89,"column":32},"generated":{"line":1,"column":1058}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":99,"column":14},"generated":{"line":1,"column":1061}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":101,"column":50},"generated":{"line":1,"column":1153}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":102,"column":18},"generated":{"line":1,"column":1168}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":103,"column":27},"generated":{"line":1,"column":1212}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":107,"column":40},"generated":{"line":1,"column":1419}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":108,"column":29},"generated":{"line":1,"column":1455}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":110,"column":27},"generated":{"line":1,"column":1523}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":116,"column":16},"generated":{"line":1,"column":1572}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":115,"column":36},"generated":{"line":1,"column":1575}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":115,"column":18},"generated":{"line":1,"column":1579}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":115,"column":41},"generated":{"line":1,"column":1582}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":115,"column":45},"generated":{"line":1,"column":1584}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":117,"column":20},"generated":{"line":1,"column":1609}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":117,"column":46},"generated":{"line":1,"column":1628}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":117,"column":50},"generated":{"line":1,"column":1630}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":117,"column":66},"generated":{"line":1,"column":1646}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":123,"column":52},"generated":{"line":1,"column":1772}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":128,"column":42},"generated":{"line":1,"column":2018}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":132,"column":24},"generated":{"line":1,"column":2122}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":132,"column":63},"generated":{"line":1,"column":2154}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":134,"column":24},"generated":{"line":1,"column":2215}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":134,"column":60},"generated":{"line":1,"column":2244}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":140,"column":14},"generated":{"line":1,"column":2295}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":141,"column":38},"generated":{"line":1,"column":2339}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":141,"column":60},"generated":{"line":1,"column":2354}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":142,"column":27},"generated":{"line":1,"column":2398}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":143,"column":34},"generated":{"line":1,"column":2463}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":144,"column":29},"generated":{"line":1,"column":2499}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":146,"column":27},"generated":{"line":1,"column":2567}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":149,"column":20},"generated":{"line":1,"column":2622}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":149,"column":41},"generated":{"line":1,"column":2636}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":153,"column":16},"generated":{"line":1,"column":2659}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":153,"column":20},"generated":{"line":1,"column":2661}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":153,"column":24},"generated":{"line":1,"column":2663}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":153,"column":37},"generated":{"line":1,"column":2666}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":20},"generated":{"line":1,"column":2667}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":20},"generated":{"line":1,"column":2673}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":38},"generated":{"line":1,"column":2675}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":48},"generated":{"line":1,"column":2677}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":54},"generated":{"line":1,"column":2680}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":161,"column":18},"generated":{"line":1,"column":2682}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":161,"column":23},"generated":{"line":1,"column":2684}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":161,"column":23},"generated":{"line":1,"column":2689}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":161,"column":41},"generated":{"line":1,"column":2707}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":162,"column":18},"generated":{"line":1,"column":2710}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":164,"column":19},"generated":{"line":1,"column":2712}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":164,"column":35},"generated":{"line":1,"column":2714}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":164,"column":41},"generated":{"line":1,"column":2717}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":164,"column":46},"generated":{"line":1,"column":2720}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":164,"column":56},"generated":{"line":1,"column":2722}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":164,"column":62},"generated":{"line":1,"column":2725}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":165,"column":19},"generated":{"line":1,"column":2728}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":165,"column":35},"generated":{"line":1,"column":2730}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":165,"column":41},"generated":{"line":1,"column":2733}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":165,"column":46},"generated":{"line":1,"column":2736}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":165,"column":56},"generated":{"line":1,"column":2738}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":165,"column":62},"generated":{"line":1,"column":2741}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":166,"column":16},"generated":{"line":1,"column":2744}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":167,"column":36},"generated":{"line":1,"column":2786}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":167,"column":46},"generated":{"line":1,"column":2788}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":167,"column":53},"generated":{"line":1,"column":2795}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":169,"column":52},"generated":{"line":1,"column":2854}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":170,"column":20},"generated":{"line":1,"column":2869}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":170,"column":24},"generated":{"line":1,"column":2871}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":171,"column":29},"generated":{"line":1,"column":2917}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":171,"column":33},"generated":{"line":1,"column":2919}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":175,"column":42},"generated":{"line":1,"column":3132}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":176,"column":31},"generated":{"line":1,"column":3170}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":176,"column":35},"generated":{"line":1,"column":3172}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":178,"column":29},"generated":{"line":1,"column":3244}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":178,"column":33},"generated":{"line":1,"column":3246}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":184,"column":20},"generated":{"line":1,"column":3301}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":184,"column":36},"generated":{"line":1,"column":3303}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":185,"column":18},"generated":{"line":1,"column":3307}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":187,"column":54},"generated":{"line":1,"column":3403}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":188,"column":22},"generated":{"line":1,"column":3418}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":189,"column":31},"generated":{"line":1,"column":3466}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":190,"column":31},"generated":{"line":1,"column":3534}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":195,"column":16},"generated":{"line":1,"column":3594}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":196,"column":22},"generated":{"line":1,"column":3622}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":196,"column":33},"generated":{"line":1,"column":3624}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":196,"column":52},"generated":{"line":1,"column":3643}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":196,"column":68},"generated":{"line":1,"column":3659}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":196,"column":72},"generated":{"line":1,"column":3661}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":203,"column":18},"generated":{"line":1,"column":3691}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":202,"column":40},"generated":{"line":1,"column":3694}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":202,"column":20},"generated":{"line":1,"column":3698}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":204,"column":24},"generated":{"line":1,"column":3727}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":204,"column":35},"generated":{"line":1,"column":3729}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":204,"column":49},"generated":{"line":1,"column":3743}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":208,"column":38},"generated":{"line":1,"column":3811}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":210,"column":54},"generated":{"line":1,"column":3872}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":211,"column":22},"generated":{"line":1,"column":3887}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":211,"column":26},"generated":{"line":1,"column":3889}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":212,"column":31},"generated":{"line":1,"column":3937}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":212,"column":35},"generated":{"line":1,"column":3939}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":213,"column":44},"generated":{"line":1,"column":4020}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":214,"column":33},"generated":{"line":1,"column":4060}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":214,"column":37},"generated":{"line":1,"column":4062}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":216,"column":31},"generated":{"line":1,"column":4138}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":216,"column":35},"generated":{"line":1,"column":4140}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":219,"column":24},"generated":{"line":1,"column":4203}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":219,"column":35},"generated":{"line":1,"column":4205}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":219,"column":49},"generated":{"line":1,"column":4219}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":219,"column":53},"generated":{"line":1,"column":4221}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":226,"column":14},"generated":{"line":1,"column":4254}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":226,"column":18},"generated":{"line":1,"column":4256}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":234,"column":16},"generated":{"line":1,"column":4260}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":234,"column":26},"generated":{"line":1,"column":4262}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":234,"column":32},"generated":{"line":1,"column":4265}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":235,"column":14},"generated":{"line":1,"column":4268}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":236,"column":38},"generated":{"line":1,"column":4312}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":237,"column":49},"generated":{"line":1,"column":4366}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":238,"column":18},"generated":{"line":1,"column":4381}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":239,"column":27},"generated":{"line":1,"column":4425}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":242,"column":40},"generated":{"line":1,"column":4630}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":243,"column":29},"generated":{"line":1,"column":4666}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":245,"column":27},"generated":{"line":1,"column":4734}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":248,"column":45},"generated":{"line":1,"column":4814}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":249,"column":18},"generated":{"line":1,"column":4829}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":249,"column":22},"generated":{"line":1,"column":4831}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":250,"column":27},"generated":{"line":1,"column":4875}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":250,"column":31},"generated":{"line":1,"column":4877}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":253,"column":34},"generated":{"line":1,"column":5074}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":254,"column":29},"generated":{"line":1,"column":5110}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":254,"column":33},"generated":{"line":1,"column":5112}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":256,"column":27},"generated":{"line":1,"column":5180}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":256,"column":31},"generated":{"line":1,"column":5182}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":259,"column":20},"generated":{"line":1,"column":5237}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":259,"column":46},"generated":{"line":1,"column":5256}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":259,"column":62},"generated":{"line":1,"column":5272}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":259,"column":66},"generated":{"line":1,"column":5274}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":262,"column":18},"generated":{"line":1,"column":5299}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":262,"column":22},"generated":{"line":1,"column":5301}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":262,"column":26},"generated":{"line":1,"column":5303}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":263,"column":16},"generated":{"line":1,"column":5307}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":265,"column":40},"generated":{"line":1,"column":5391}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":266,"column":51},"generated":{"line":1,"column":5447}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":269,"column":22},"generated":{"line":1,"column":5557}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":269,"column":33},"generated":{"line":1,"column":5559}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":269,"column":52},"generated":{"line":1,"column":5578}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":269,"column":56},"generated":{"line":1,"column":5580}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":273,"column":14},"generated":{"line":1,"column":5620}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":274,"column":37},"generated":{"line":1,"column":5663}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":274,"column":59},"generated":{"line":1,"column":5678}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":275,"column":27},"generated":{"line":1,"column":5722}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":276,"column":34},"generated":{"line":1,"column":5787}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":277,"column":29},"generated":{"line":1,"column":5823}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":279,"column":27},"generated":{"line":1,"column":5891}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":282,"column":34},"generated":{"line":1,"column":5960}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":283,"column":49},"generated":{"line":1,"column":6014}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":284,"column":18},"generated":{"line":1,"column":6029}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":284,"column":22},"generated":{"line":1,"column":6031}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":285,"column":27},"generated":{"line":1,"column":6075}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":285,"column":31},"generated":{"line":1,"column":6077}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":286,"column":40},"generated":{"line":1,"column":6154}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":287,"column":29},"generated":{"line":1,"column":6190}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":287,"column":33},"generated":{"line":1,"column":6192}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":289,"column":27},"generated":{"line":1,"column":6259}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":289,"column":31},"generated":{"line":1,"column":6261}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":292,"column":20},"generated":{"line":1,"column":6316}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":293,"column":27},"generated":{"line":1,"column":6355}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":293,"column":43},"generated":{"line":1,"column":6371}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":293,"column":47},"generated":{"line":1,"column":6373}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":296,"column":18},"generated":{"line":1,"column":6398}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":296,"column":22},"generated":{"line":1,"column":6400}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":296,"column":26},"generated":{"line":1,"column":6402}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":297,"column":16},"generated":{"line":1,"column":6406}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":298,"column":22},"generated":{"line":1,"column":6434}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":298,"column":33},"generated":{"line":1,"column":6436}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":298,"column":52},"generated":{"line":1,"column":6455}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":298,"column":68},"generated":{"line":1,"column":6471}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":298,"column":72},"generated":{"line":1,"column":6473}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":309,"column":12},"generated":{"line":1,"column":6503}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":309,"column":23},"generated":{"line":1,"column":6505}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":310,"column":10},"generated":{"line":1,"column":6509}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":311,"column":28},"generated":{"line":1,"column":6543}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":311,"column":34},"generated":{"line":1,"column":6549}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":312,"column":27},"generated":{"line":1,"column":6589}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":315,"column":14},"generated":{"line":1,"column":6635}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":315,"column":18},"generated":{"line":1,"column":6637}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":315,"column":22},"generated":{"line":1,"column":6639}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":316,"column":12},"generated":{"line":1,"column":6643}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":317,"column":30},"generated":{"line":1,"column":6679}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":317,"column":36},"generated":{"line":1,"column":6685}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":317,"column":40},"generated":{"line":1,"column":6687}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":318,"column":29},"generated":{"line":1,"column":6729}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":318,"column":40},"generated":{"line":1,"column":6731}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":323,"column":6},"generated":{"line":1,"column":6781}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":323,"column":18},"generated":{"line":1,"column":6784}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":328,"column":8},"generated":{"line":1,"column":6806}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":328,"column":8},"generated":{"line":1,"column":6810}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":328,"column":28},"generated":{"line":1,"column":6812}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":328,"column":32},"generated":{"line":1,"column":6815}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":328,"column":57},"generated":{"line":1,"column":6817}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":329,"column":8},"generated":{"line":1,"column":6820}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":331,"column":8},"generated":{"line":1,"column":6824}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":330,"column":10},"generated":{"line":1,"column":6826}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":333,"column":12},"generated":{"line":1,"column":6928}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":335,"column":17},"generated":{"line":1,"column":6943}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":338,"column":12},"generated":{"line":1,"column":7037}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":342,"column":12},"generated":{"line":1,"column":7092}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":346,"column":6},"generated":{"line":1,"column":7107}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":346,"column":31},"generated":{"line":1,"column":7109}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":349,"column":10},"generated":{"line":1,"column":7141}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":349,"column":10},"generated":{"line":1,"column":7147}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":349,"column":27},"generated":{"line":1,"column":7149}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":349,"column":37},"generated":{"line":1,"column":7151}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":349,"column":73},"generated":{"line":1,"column":7185}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":350,"column":8},"generated":{"line":1,"column":7188}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":351,"column":11},"generated":{"line":1,"column":7191}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":351,"column":11},"generated":{"line":1,"column":7196}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":351,"column":25},"generated":{"line":1,"column":7210}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":351,"column":30},"generated":{"line":1,"column":7215}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":354,"column":8},"generated":{"line":1,"column":7223}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":355,"column":11},"generated":{"line":1,"column":7226}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":355,"column":11},"generated":{"line":1,"column":7231}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":355,"column":25},"generated":{"line":1,"column":7245}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":355,"column":30},"generated":{"line":1,"column":7250}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":357,"column":8},"generated":{"line":1,"column":7276}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":358,"column":11},"generated":{"line":1,"column":7279}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":358,"column":11},"generated":{"line":1,"column":7284}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":358,"column":25},"generated":{"line":1,"column":7298}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":358,"column":30},"generated":{"line":1,"column":7303}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":361,"column":9},"generated":{"line":1,"column":7321}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":361,"column":9},"generated":{"line":1,"column":7326}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":362,"column":8},"generated":{"line":1,"column":7346}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":364,"column":36},"generated":{"line":1,"column":7388}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":364,"column":53},"generated":{"line":1,"column":7394}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":365,"column":33},"generated":{"line":1,"column":7433}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":365,"column":44},"generated":{"line":1,"column":7439}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":373,"column":24},"generated":{"line":1,"column":7651}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":374,"column":28},"generated":{"line":1,"column":7684}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":381,"column":10},"generated":{"line":1,"column":7911}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":384,"column":10},"generated":{"line":1,"column":7985}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":385,"column":10},"generated":{"line":1,"column":7999}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":8047}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":8055}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":8084}}],"sources":{"../src/conv_packed_gpu_depthwise.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, util} from '@tensorflow/tfjs-core';\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class DepthwiseConvPacked2DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  packedInputs = true;\n  packedOutput = true;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      convInfo: backend_util.Conv2DInfo, addBias = false,\n      activation: string = null, hasPreluActivation = false,\n      hasLeakyReluAlpha = false) {\n    this.outputShape = convInfo.outShape;\n    const channelMul = convInfo.outChannels / convInfo.inChannels;\n    const xNumRows = convInfo.inHeight;\n    const xNumCols = convInfo.inWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const texelsAcross = filterWidth;\n\n    let mainLoop = `\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;`;\n\n    for (let c = 0; c < filterWidth; c++) {\n      mainLoop += `\n          vec4 xTexelC${c * 2};\n          int xTexelC${c * 2}Ready;\n          vec4 xC${c};`;\n    }\n\n    /**\n     * This vectorized implementation works by gathering the values needed for\n     * each output channel's dot product into vec4's and then multiplying them\n     * all together (this happens in the final double for-loop below). Most of\n     * the main loop consists of constructing these vec4's with the minimum\n     * number of texture2D calls, which means making use of all four returned\n     * values from a texture2D call at once.\n     */\n    for (let r = 0; r < filterHeight; r++) {\n      for (let c = 0; c < filterWidth; c++) {\n        mainLoop += `\n          xTexelC${c * 2} = vec4(0.0);\n          xTexelC${c * 2}Ready = 0;\n          xC${c} = vec4(0.0);`;\n      }\n      mainLoop += `\n        xR = xRCorner + ${r * dilationHeight};\n        if (xR >=0 && xR < ${xNumRows}) {\n      `;\n\n      for (let texelC = 0; texelC < (texelsAcross + 1) / 2; texelC++) {\n        const colIndex = texelC * 2;\n        const c = colIndex * dilationWidth;\n\n        mainLoop += `\n          xC = xCCorner + ${c};\n          `;\n\n        if (strideWidth === 1) {\n          if (colIndex < filterWidth) {\n            // If padding is odd, the outer texels have to be composed.\n            if (padLeft % 2 === 1) {\n              // TODO: Ensure vec4 previous does not result in redundant sample,\n              // and avoid setting xTexelRC's that exceed the boundary in the\n              // first place rather than resetting them to vec4(0)).\n\n              // To compute xCOffset:\n              // - If padding is odd, we must add 1 to ensure we ask for an\n              // even-numbered row.\n              // - We subtract 2 to access the previous texel.\n\n              mainLoop += `\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${xNumCols} && xTexelC${\n                  c}Ready == 0) {\n                  xTexelC${c} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${xNumCols}) {\n                    xTexelC${c}.zw = vec2(0.0);\n                  }\n                  xTexelC${c}Ready = 1;\n                }\n              `;\n              // This texel has been read in previous iteration if the dilation\n              // is 1.\n              if (dilationWidth === 1 && c > 0) {\n                mainLoop += `\n                xC${colIndex} = vec4(xTexelC${c - 2}.zw, xTexelC${c}.xy);\n                `;\n              } else {\n                mainLoop += `\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${xNumCols}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${colIndex} = vec4(previous.zw, xTexelC${c}.xy);\n                  } else {\n                    xC${colIndex} = vec4(0.0, 0.0, xTexelC${c}.xy);\n                  }\n                  `;\n              }\n            } else {\n              // Padding is even, so xRC corresponds to a single texel.\n              mainLoop += `\n                if (xC >= 0 && xC < ${xNumCols} && xTexelC${c}Ready == 0) {\n                  xTexelC${c} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${xNumCols}) {\n                    xTexelC${c}.zw = vec2(0.0);\n                  }\n                  xTexelC${c}Ready = 1;\n                }\n\n                xC${colIndex} = xTexelC${c};\n                `;\n            }\n\n            if (c + 1 < filterWidth) {\n              // If dilation is even, the second entry should match the first\n              // (either both are composed or both are single samples). But if\n              // dilation is odd, then the second entry should be the opposite\n              // of the first (if the first is composed, the second is a single\n              // sample, and vice versa.)\n\n              const nextTexelOffset = padLeft % 2 === 0 ?\n                  util.nearestLargerEven(dilationWidth) :\n                  dilationWidth;\n\n              if ((dilationWidth % 2 === 0 && padLeft % 2 === 1) ||\n                  (dilationWidth % 2 !== 0 && padLeft % 2 !== 1)) {\n                mainLoop += `\n                  xCOffset = xC + ${padLeft % 2} + ${nextTexelOffset};\n\n                  if (xCOffset >= 0 && xCOffset < ${xNumCols} && xTexelC${\n                    c + 2}Ready == 0) {\n                    xTexelC${c + 2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${xNumCols}) {\n                      xTexelC${c + 2}.zw = vec2(0.0);\n                    }\n                    xTexelC${c + 2}Ready = 1;\n                  }\n                  `;\n\n                // If dilation > 1 then the xRC's will not be able to share any\n                // values, so each xRC will require two unique calls to getX.\n                if (dilationWidth > 1) {\n                  mainLoop += `\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${xNumCols} && xTexelC${\n                      c}Ready == 0) {\n                      xTexelC${c} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${c}Ready = 1;\n                    }\n                    `;\n                }\n\n                mainLoop += `\n                  xC${colIndex + 1} = vec4(xTexelC${c}.zw, xTexelC${c + 2}.xy);\n                  `;\n              } else {\n                // If dilation is 1 and padding is odd, we have already read the\n                // texel when constructing the previous x value. Here we can\n                // simply skip the texture read.\n                if (nextTexelOffset === 1) {\n                  mainLoop += `\n                    xC${colIndex + 1} = xTexelC${c};\n                    `;\n                } else {\n                  mainLoop += `\n                    xCOffset = xC + ${nextTexelOffset};\n\n                    if (xCOffset >= 0 && xCOffset < ${xNumCols} && xTexelC${\n                      c + 2}Ready == 0) {\n                      xTexelC${c + 2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${xNumCols}) {\n                        xTexelC${c + 2}.zw = vec2(0.0);\n                      }\n                      xTexelC${c + 2}Ready = 1;\n                    }\n\n                    xC${colIndex + 1} = xTexelC${c + 2};\n                    `;\n                }\n              }\n            }\n          }\n        } else {  // stride === 2\n          if (c < filterWidth) {\n            // Depending on whether padLeft is even or odd, we want either the\n            // xy or zw channels from X texels for xC${colIndex}. If padLeft is\n            // even, xC${colIndex +1} is simply the zw channels of texels we've\n            // already sampled. But if padLeft is odd, xC{$c + 1}.zw will\n            // need to come from the xy channels of a new texel, hence the `\n            // vec4\n            // final` initialized below.\n            if (padLeft % 2 === 1) {\n              mainLoop += `\n                xCOffset = xC + 1 - ${strideWidth};\n                if(xCOffset >= 0 && xCOffset < ${xNumCols} && xTexelC${\n                  c}Ready == 0) {\n                  xTexelC${c} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${xNumCols}) {\n                    xTexelC${c}.zw = vec2(0.0);\n                  }\n                  xTexelC${c}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${xNumCols} && xTexelC${\n                  c + 2}Ready == 0) {\n                  xTexelC${c + 2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${xNumCols}) {\n                    xTexelC${c + 2}.zw = vec2(0.0);\n                  }\n                  xTexelC${c + 2}Ready = 1;\n                }\n\n                xC${colIndex} = vec4(xTexelC${c}.zw, xTexelC${c + 2}.zw);\n              `;\n\n              if (c + 1 < filterWidth) {\n                mainLoop += `\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${strideWidth};\n                  if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${colIndex + 1} = vec4(xTexelC${c + 2}.xy, final.xy);\n                `;\n              }\n            } else {\n              mainLoop += `\n                if(xC >= 0 && xC < ${xNumCols} && xTexelC${c}Ready == 0) {\n                  xTexelC${c} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${xNumCols}) {\n                    xTexelC${c}.zw = vec2(0.0);\n                  }\n                  xTexelC${c}Ready = 1;\n                }\n\n                xCOffset = xC + ${strideWidth};\n                if(xCOffset >= 0 && xCOffset < ${xNumCols} && xTexelC${\n                  c + 2}Ready == 0) {\n                  xTexelC${c + 2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${xNumCols}) {\n                    xTexelC${c + 2}.zw = vec2(0.);\n                  }\n                  xTexelC${c + 2}Ready = 1;\n                }\n\n                xC${colIndex} = vec4(\n                  xTexelC${c}.xy, xTexelC${c + 2}.xy);\n              `;\n\n              if (c + 1 < filterWidth) {\n                mainLoop += `\n                  xC${colIndex + 1} = vec4(xTexelC${c}.zw, xTexelC${c + 2}.zw);\n                `;\n              }\n            }\n          }\n        }\n\n        // localize the dotProd accumulation within the loop, the theory is for\n        // GPU with limited cache, accumulate sum across large amount of\n        // veriables will cause lots of cache misses. (i.e. 5x5 filter will have\n        // 50 variables)\n        if (colIndex < filterWidth) {\n          mainLoop += `\n            wTexel = getW(${r}, ${c}, d1, q);\n            dotProd += xC${colIndex} * vec4(wTexel.xz, wTexel.xz);\n          `;\n\n          if (c + 1 < filterWidth) {\n            mainLoop += `\n              wTexel = getW(${r}, ${c + 1}, d1, q);\n              dotProd += xC${colIndex + 1} * vec4(wTexel.xz, wTexel.xz);\n            `;\n          }\n        }\n      }\n      mainLoop += `\n        }\n      `;\n    }\n\n    let activationSnippet = '', applyActivationSnippet = '';\n    if (activation) {\n      if (hasPreluActivation) {\n        activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n      } else if (hasLeakyReluAlpha) {\n        activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n      } else {\n        activationSnippet = `vec4 activation(vec4 x) {\n          ${activation}\n        }`;\n      }\n\n      applyActivationSnippet = `result = activation(result);`;\n    }\n\n    const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n    if (addBias) {\n      this.variableNames.push('bias');\n    }\n\n    if (hasPreluActivation) {\n      this.variableNames.push('preluActivationWeights');\n    }\n    if (hasLeakyReluAlpha) {\n      this.variableNames.push('leakyreluAlpha');\n    }\n\n    this.userCode = `\n      ${activationSnippet}\n\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${channelMul};\n        int q = d2 - d1 * ${channelMul};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${mainLoop}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"83e15cbc92de7bbba59357b19177b74e","cacheData":{"env":{}}}