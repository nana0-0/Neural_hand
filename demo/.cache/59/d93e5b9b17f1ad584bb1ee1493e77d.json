{"id":"BsuI","dependencies":[{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\where.js.map","includedInParent":true,"mtime":1631428631699},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\package.json","includedInParent":true,"mtime":1631157722000},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\.babelrc","includedInParent":true,"mtime":1631157722000},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1631428631699},{"name":"../engine","loc":{"line":17,"column":23},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\where.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":23},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\where.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\where.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor_util_env.js"},{"name":"./broadcast_to","loc":{"line":20,"column":28},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\where.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\broadcast_to.js"},{"name":"./broadcast_util","loc":{"line":21,"column":43},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\where.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\broadcast_util.js"},{"name":"./operation","loc":{"line":22,"column":19},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\where.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.where=void 0;var e=require(\"../engine\"),r=require(\"../kernel_names\"),o=require(\"../tensor_util_env\"),t=require(\"./broadcast_to\"),n=require(\"./broadcast_util\"),s=require(\"./operation\");function a(s,a,c){const i=(0,o.convertToTensor)(a,\"a\",\"where\"),d=(0,o.convertToTensor)(c,\"b\",\"where\"),u=(0,o.convertToTensor)(s,\"condition\",\"where\",\"bool\"),h=(0,n.assertAndGetBroadcastShape)((0,n.assertAndGetBroadcastShape)(u.shape,i.shape),d.shape),p={condition:(0,t.broadcastTo)(u,h),t:(0,t.broadcastTo)(i,h),e:(0,t.broadcastTo)(d,h)};return e.ENGINE.runKernel(r.Select,p)}const c=(0,s.op)({where_:a});exports.where=c;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":0}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":13}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":20}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":35}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":43}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":56}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":57}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":64}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":68}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":76}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":87}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":89}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":93}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":95}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":103}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":116}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":118}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":126}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":145}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":147}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":155}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":177}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":179}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":187}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":205}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":207}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":215}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":235}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":237}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":1,"column":245}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":1,"column":260}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":1,"column":269}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":1,"column":271}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":53,"column":34},"generated":{"line":1,"column":273}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":53,"column":51},"generated":{"line":1,"column":275}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":1,"column":278}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":1,"column":284}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":54,"column":13},"generated":{"line":1,"column":287}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":1,"column":289}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":1,"column":291}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":1,"column":308}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":54,"column":32},"generated":{"line":1,"column":310}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":54,"column":37},"generated":{"line":1,"column":314}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":1,"column":323}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":55,"column":13},"generated":{"line":1,"column":326}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":1,"column":328}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":1,"column":330}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":1,"column":347}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":55,"column":32},"generated":{"line":1,"column":349}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":55,"column":37},"generated":{"line":1,"column":353}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":1,"column":362}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":56,"column":21},"generated":{"line":1,"column":365}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":56,"column":37},"generated":{"line":1,"column":367}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":56,"column":37},"generated":{"line":1,"column":369}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":56,"column":37},"generated":{"line":1,"column":386}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":56,"column":48},"generated":{"line":1,"column":388}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":56,"column":61},"generated":{"line":1,"column":400}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":56,"column":70},"generated":{"line":1,"column":408}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":60,"column":8},"generated":{"line":1,"column":416}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":60,"column":25},"generated":{"line":1,"column":419}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":421}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":423}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":452}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":33},"generated":{"line":1,"column":454}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":33},"generated":{"line":1,"column":456}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":33},"generated":{"line":1,"column":484}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":44},"generated":{"line":1,"column":486}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":51},"generated":{"line":1,"column":492}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":54},"generated":{"line":1,"column":494}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":62},"generated":{"line":1,"column":501}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":61,"column":65},"generated":{"line":1,"column":503}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":66,"column":8},"generated":{"line":1,"column":510}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":66,"column":31},"generated":{"line":1,"column":512}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":1,"column":513}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":62,"column":32},"generated":{"line":1,"column":524}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":62,"column":44},"generated":{"line":1,"column":526}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":62,"column":44},"generated":{"line":1,"column":528}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":62,"column":44},"generated":{"line":1,"column":541}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":62,"column":56},"generated":{"line":1,"column":543}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":546}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":63,"column":24},"generated":{"line":1,"column":549}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":63,"column":36},"generated":{"line":1,"column":551}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":63,"column":36},"generated":{"line":1,"column":553}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":63,"column":36},"generated":{"line":1,"column":566}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":63,"column":40},"generated":{"line":1,"column":568}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":1,"column":571}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":64,"column":24},"generated":{"line":1,"column":574}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":64,"column":36},"generated":{"line":1,"column":576}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":64,"column":36},"generated":{"line":1,"column":578}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":64,"column":36},"generated":{"line":1,"column":591}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":64,"column":40},"generated":{"line":1,"column":593}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":71,"column":9},"generated":{"line":1,"column":597}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":71,"column":9},"generated":{"line":1,"column":604}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":71,"column":16},"generated":{"line":1,"column":606}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":71,"column":16},"generated":{"line":1,"column":613}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":71,"column":26},"generated":{"line":1,"column":623}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":71,"column":9},"generated":{"line":1,"column":625}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":71,"column":34},"generated":{"line":1,"column":632}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":635}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":1,"column":641}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":21},"generated":{"line":1,"column":644}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":1,"column":646}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":1,"column":648}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":1,"column":652}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":25},"generated":{"line":1,"column":653}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":25},"generated":{"line":1,"column":660}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":664}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":672}},{"source":"../../src/ops/where.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":678}}],"sources":{"../../src/ops/where.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Select, SelectInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {broadcastTo} from './broadcast_to';\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same dtype as `a` and with shape that is\n *     compatible with `a`.\n * @return A tensor with same dtype as `a` and `b`, and shape that is\n *     broadcastable from `a` and `b`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction where_<T extends Tensor>(\n    condition: Tensor|TensorLike, a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'where');\n  const $b = convertToTensor(b, 'b', 'where');\n  const $condition = convertToTensor(condition, 'condition', 'where', 'bool');\n  // TODO: move this logic to forward function when the broadcastTo op is\n  // implemented in WASM.\n  // Find the broadcastable shape for $condition, $a, and $b.\n  const broadcastShape = assertAndGetBroadcastShape(\n      assertAndGetBroadcastShape($condition.shape, $a.shape), $b.shape);\n  const $broadcastedCondition = broadcastTo($condition, broadcastShape);\n  const $broadcastedA = broadcastTo($a, broadcastShape);\n  const $broadcastedB = broadcastTo($b, broadcastShape);\n\n  const inputs: SelectInputs = {\n    condition: $broadcastedCondition,\n    t: $broadcastedA,\n    e: $broadcastedB\n  };\n  return ENGINE.runKernel(Select, inputs as {} as NamedTensorMap);\n}\n\nexport const where = op({where_});\n"},"lineCount":null}},"error":null,"hash":"3aad645ac8c0755a80833031a04adcfc","cacheData":{"env":{}}}