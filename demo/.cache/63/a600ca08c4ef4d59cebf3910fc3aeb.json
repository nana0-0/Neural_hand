{"id":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","dependencies":[{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\package.json","includedInParent":true,"mtime":1631872669254},{"name":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\.babelrc","includedInParent":true,"mtime":1631157722000},{"name":"../keypoints","loc":{"line":20,"column":26},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\multi_person\\decode_multiple_masks_cpu.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\keypoints.js"},{"name":"./util","loc":{"line":21,"column":21},"parent":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\multi_person\\decode_multiple_masks_cpu.js","resolved":"C:\\Users\\21aw0128\\Desktop\\body-pix\\demo\\node_modules\\@tensorflow-models\\body-pix\\multi_person\\util.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexports.__esModule = true;\r\nexports.decodeMultiplePartMasksCPU = exports.decodeMultipleMasksCPU = void 0;\r\nvar keypoints_1 = require(\"../keypoints\");\r\nvar util_1 = require(\"./util\");\r\nfunction computeDistance(embedding, pose, minPartScore) {\r\n    if (minPartScore === void 0) { minPartScore = 0.3; }\r\n    var distance = 0.0;\r\n    var numKpt = 0;\r\n    for (var p = 0; p < embedding.length; p++) {\r\n        if (pose.keypoints[p].score > minPartScore) {\r\n            numKpt += 1;\r\n            distance += Math.pow((embedding[p].x - pose.keypoints[p].position.x), 2) +\r\n                Math.pow((embedding[p].y - pose.keypoints[p].position.y), 2);\r\n        }\r\n    }\r\n    if (numKpt === 0) {\r\n        distance = Infinity;\r\n    }\r\n    else {\r\n        distance = distance / numKpt;\r\n    }\r\n    return distance;\r\n}\r\nfunction convertToPositionInOuput(position, _a, _b, stride) {\r\n    var padT = _a[0], padL = _a[1];\r\n    var scaleX = _b[0], scaleY = _b[1];\r\n    var y = Math.round(((padT + position.y + 1.0) * scaleY - 1.0) / stride);\r\n    var x = Math.round(((padL + position.x + 1.0) * scaleX - 1.0) / stride);\r\n    return { x: x, y: y };\r\n}\r\nfunction getEmbedding(location, keypointIndex, convertToPosition, outputResolutionX, longOffsets, refineSteps, _a) {\r\n    var height = _a[0], width = _a[1];\r\n    var newLocation = convertToPosition(location);\r\n    var nn = newLocation.y * outputResolutionX + newLocation.x;\r\n    var dy = longOffsets[keypoints_1.NUM_KEYPOINTS * (2 * nn) + keypointIndex];\r\n    var dx = longOffsets[keypoints_1.NUM_KEYPOINTS * (2 * nn + 1) + keypointIndex];\r\n    var y = location.y + dy;\r\n    var x = location.x + dx;\r\n    for (var t = 0; t < refineSteps; t++) {\r\n        y = Math.min(y, height - 1);\r\n        x = Math.min(x, width - 1);\r\n        var newPos = convertToPosition({ x: x, y: y });\r\n        var nn_1 = newPos.y * outputResolutionX + newPos.x;\r\n        dy = longOffsets[keypoints_1.NUM_KEYPOINTS * (2 * nn_1) + keypointIndex];\r\n        dx = longOffsets[keypoints_1.NUM_KEYPOINTS * (2 * nn_1 + 1) + keypointIndex];\r\n        y = y + dy;\r\n        x = x + dx;\r\n    }\r\n    return { x: x, y: y };\r\n}\r\nfunction matchEmbeddingToInstance(location, longOffsets, poses, numKptForMatching, _a, _b, outputResolutionX, _c, stride, refineSteps) {\r\n    var padT = _a[0], padL = _a[1];\r\n    var scaleX = _b[0], scaleY = _b[1];\r\n    var height = _c[0], width = _c[1];\r\n    var embed = [];\r\n    var convertToPosition = function (pair) {\r\n        return convertToPositionInOuput(pair, [padT, padL], [scaleX, scaleY], stride);\r\n    };\r\n    for (var keypointsIndex = 0; keypointsIndex < numKptForMatching; keypointsIndex++) {\r\n        var embedding = getEmbedding(location, keypointsIndex, convertToPosition, outputResolutionX, longOffsets, refineSteps, [height, width]);\r\n        embed.push(embedding);\r\n    }\r\n    var kMin = -1;\r\n    var kMinDist = Infinity;\r\n    for (var k = 0; k < poses.length; k++) {\r\n        var dist = computeDistance(embed, poses[k]);\r\n        if (dist < kMinDist) {\r\n            kMin = k;\r\n            kMinDist = dist;\r\n        }\r\n    }\r\n    return kMin;\r\n}\r\nfunction getOutputResolution(_a, stride) {\r\n    var inputResolutionY = _a[0], inputResolutionX = _a[1];\r\n    var outputResolutionX = Math.round((inputResolutionX - 1.0) / stride + 1.0);\r\n    var outputResolutionY = Math.round((inputResolutionY - 1.0) / stride + 1.0);\r\n    return [outputResolutionX, outputResolutionY];\r\n}\r\nfunction decodeMultipleMasksCPU(segmentation, longOffsets, posesAboveScore, height, width, stride, _a, padding, refineSteps, numKptForMatching) {\r\n    var inHeight = _a[0], inWidth = _a[1];\r\n    if (numKptForMatching === void 0) { numKptForMatching = 5; }\r\n    var dataArrays = posesAboveScore.map(function (x) { return new Uint8Array(height * width).fill(0); });\r\n    var padT = padding.top, padL = padding.left;\r\n    var _b = util_1.getScale([height, width], [inHeight, inWidth], padding), scaleX = _b[0], scaleY = _b[1];\r\n    var outputResolutionX = getOutputResolution([inHeight, inWidth], stride)[0];\r\n    for (var i = 0; i < height; i += 1) {\r\n        for (var j = 0; j < width; j += 1) {\r\n            var n = i * width + j;\r\n            var prob = segmentation[n];\r\n            if (prob === 1) {\r\n                var kMin = matchEmbeddingToInstance({ x: j, y: i }, longOffsets, posesAboveScore, numKptForMatching, [padT, padL], [scaleX, scaleY], outputResolutionX, [height, width], stride, refineSteps);\r\n                if (kMin >= 0) {\r\n                    dataArrays[kMin][n] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return dataArrays;\r\n}\r\nexports.decodeMultipleMasksCPU = decodeMultipleMasksCPU;\r\nfunction decodeMultiplePartMasksCPU(segmentation, longOffsets, partSegmentaion, posesAboveScore, height, width, stride, _a, padding, refineSteps, numKptForMatching) {\r\n    var inHeight = _a[0], inWidth = _a[1];\r\n    if (numKptForMatching === void 0) { numKptForMatching = 5; }\r\n    var dataArrays = posesAboveScore.map(function (x) { return new Int32Array(height * width).fill(-1); });\r\n    var padT = padding.top, padL = padding.left;\r\n    var _b = util_1.getScale([height, width], [inHeight, inWidth], padding), scaleX = _b[0], scaleY = _b[1];\r\n    var outputResolutionX = getOutputResolution([inHeight, inWidth], stride)[0];\r\n    for (var i = 0; i < height; i += 1) {\r\n        for (var j = 0; j < width; j += 1) {\r\n            var n = i * width + j;\r\n            var prob = segmentation[n];\r\n            if (prob === 1) {\r\n                var kMin = matchEmbeddingToInstance({ x: j, y: i }, longOffsets, posesAboveScore, numKptForMatching, [padT, padL], [scaleX, scaleY], outputResolutionX, [height, width], stride, refineSteps);\r\n                if (kMin >= 0) {\r\n                    dataArrays[kMin][n] = partSegmentaion[n];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return dataArrays;\r\n}\r\nexports.decodeMultiplePartMasksCPU = decodeMultiplePartMasksCPU;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}}],"sources":{"node_modules/@tensorflow-models/body-pix/multi_person/decode_multiple_masks_cpu.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexports.__esModule = true;\r\nexports.decodeMultiplePartMasksCPU = exports.decodeMultipleMasksCPU = void 0;\r\nvar keypoints_1 = require(\"../keypoints\");\r\nvar util_1 = require(\"./util\");\r\nfunction computeDistance(embedding, pose, minPartScore) {\r\n    if (minPartScore === void 0) { minPartScore = 0.3; }\r\n    var distance = 0.0;\r\n    var numKpt = 0;\r\n    for (var p = 0; p < embedding.length; p++) {\r\n        if (pose.keypoints[p].score > minPartScore) {\r\n            numKpt += 1;\r\n            distance += Math.pow((embedding[p].x - pose.keypoints[p].position.x), 2) +\r\n                Math.pow((embedding[p].y - pose.keypoints[p].position.y), 2);\r\n        }\r\n    }\r\n    if (numKpt === 0) {\r\n        distance = Infinity;\r\n    }\r\n    else {\r\n        distance = distance / numKpt;\r\n    }\r\n    return distance;\r\n}\r\nfunction convertToPositionInOuput(position, _a, _b, stride) {\r\n    var padT = _a[0], padL = _a[1];\r\n    var scaleX = _b[0], scaleY = _b[1];\r\n    var y = Math.round(((padT + position.y + 1.0) * scaleY - 1.0) / stride);\r\n    var x = Math.round(((padL + position.x + 1.0) * scaleX - 1.0) / stride);\r\n    return { x: x, y: y };\r\n}\r\nfunction getEmbedding(location, keypointIndex, convertToPosition, outputResolutionX, longOffsets, refineSteps, _a) {\r\n    var height = _a[0], width = _a[1];\r\n    var newLocation = convertToPosition(location);\r\n    var nn = newLocation.y * outputResolutionX + newLocation.x;\r\n    var dy = longOffsets[keypoints_1.NUM_KEYPOINTS * (2 * nn) + keypointIndex];\r\n    var dx = longOffsets[keypoints_1.NUM_KEYPOINTS * (2 * nn + 1) + keypointIndex];\r\n    var y = location.y + dy;\r\n    var x = location.x + dx;\r\n    for (var t = 0; t < refineSteps; t++) {\r\n        y = Math.min(y, height - 1);\r\n        x = Math.min(x, width - 1);\r\n        var newPos = convertToPosition({ x: x, y: y });\r\n        var nn_1 = newPos.y * outputResolutionX + newPos.x;\r\n        dy = longOffsets[keypoints_1.NUM_KEYPOINTS * (2 * nn_1) + keypointIndex];\r\n        dx = longOffsets[keypoints_1.NUM_KEYPOINTS * (2 * nn_1 + 1) + keypointIndex];\r\n        y = y + dy;\r\n        x = x + dx;\r\n    }\r\n    return { x: x, y: y };\r\n}\r\nfunction matchEmbeddingToInstance(location, longOffsets, poses, numKptForMatching, _a, _b, outputResolutionX, _c, stride, refineSteps) {\r\n    var padT = _a[0], padL = _a[1];\r\n    var scaleX = _b[0], scaleY = _b[1];\r\n    var height = _c[0], width = _c[1];\r\n    var embed = [];\r\n    var convertToPosition = function (pair) {\r\n        return convertToPositionInOuput(pair, [padT, padL], [scaleX, scaleY], stride);\r\n    };\r\n    for (var keypointsIndex = 0; keypointsIndex < numKptForMatching; keypointsIndex++) {\r\n        var embedding = getEmbedding(location, keypointsIndex, convertToPosition, outputResolutionX, longOffsets, refineSteps, [height, width]);\r\n        embed.push(embedding);\r\n    }\r\n    var kMin = -1;\r\n    var kMinDist = Infinity;\r\n    for (var k = 0; k < poses.length; k++) {\r\n        var dist = computeDistance(embed, poses[k]);\r\n        if (dist < kMinDist) {\r\n            kMin = k;\r\n            kMinDist = dist;\r\n        }\r\n    }\r\n    return kMin;\r\n}\r\nfunction getOutputResolution(_a, stride) {\r\n    var inputResolutionY = _a[0], inputResolutionX = _a[1];\r\n    var outputResolutionX = Math.round((inputResolutionX - 1.0) / stride + 1.0);\r\n    var outputResolutionY = Math.round((inputResolutionY - 1.0) / stride + 1.0);\r\n    return [outputResolutionX, outputResolutionY];\r\n}\r\nfunction decodeMultipleMasksCPU(segmentation, longOffsets, posesAboveScore, height, width, stride, _a, padding, refineSteps, numKptForMatching) {\r\n    var inHeight = _a[0], inWidth = _a[1];\r\n    if (numKptForMatching === void 0) { numKptForMatching = 5; }\r\n    var dataArrays = posesAboveScore.map(function (x) { return new Uint8Array(height * width).fill(0); });\r\n    var padT = padding.top, padL = padding.left;\r\n    var _b = util_1.getScale([height, width], [inHeight, inWidth], padding), scaleX = _b[0], scaleY = _b[1];\r\n    var outputResolutionX = getOutputResolution([inHeight, inWidth], stride)[0];\r\n    for (var i = 0; i < height; i += 1) {\r\n        for (var j = 0; j < width; j += 1) {\r\n            var n = i * width + j;\r\n            var prob = segmentation[n];\r\n            if (prob === 1) {\r\n                var kMin = matchEmbeddingToInstance({ x: j, y: i }, longOffsets, posesAboveScore, numKptForMatching, [padT, padL], [scaleX, scaleY], outputResolutionX, [height, width], stride, refineSteps);\r\n                if (kMin >= 0) {\r\n                    dataArrays[kMin][n] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return dataArrays;\r\n}\r\nexports.decodeMultipleMasksCPU = decodeMultipleMasksCPU;\r\nfunction decodeMultiplePartMasksCPU(segmentation, longOffsets, partSegmentaion, posesAboveScore, height, width, stride, _a, padding, refineSteps, numKptForMatching) {\r\n    var inHeight = _a[0], inWidth = _a[1];\r\n    if (numKptForMatching === void 0) { numKptForMatching = 5; }\r\n    var dataArrays = posesAboveScore.map(function (x) { return new Int32Array(height * width).fill(-1); });\r\n    var padT = padding.top, padL = padding.left;\r\n    var _b = util_1.getScale([height, width], [inHeight, inWidth], padding), scaleX = _b[0], scaleY = _b[1];\r\n    var outputResolutionX = getOutputResolution([inHeight, inWidth], stride)[0];\r\n    for (var i = 0; i < height; i += 1) {\r\n        for (var j = 0; j < width; j += 1) {\r\n            var n = i * width + j;\r\n            var prob = segmentation[n];\r\n            if (prob === 1) {\r\n                var kMin = matchEmbeddingToInstance({ x: j, y: i }, longOffsets, posesAboveScore, numKptForMatching, [padT, padL], [scaleX, scaleY], outputResolutionX, [height, width], stride, refineSteps);\r\n                if (kMin >= 0) {\r\n                    dataArrays[kMin][n] = partSegmentaion[n];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return dataArrays;\r\n}\r\nexports.decodeMultiplePartMasksCPU = decodeMultiplePartMasksCPU;\r\n"},"lineCount":141}},"error":null,"hash":"cb51e58f8d99c882c3c5ce9ca353670c","cacheData":{"env":{}}}